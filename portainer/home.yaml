networks:
  vlan-private:
    external: true
    name: br0
  vlan-iot:
    external: true
  vlan-cameras:
    external: true

services:
  homeassistant:
    image: ghcr.io/home-assistant/home-assistant:stable
    container_name: homeassistant
    privileged: true
    networks:
      vlan-private:
        ipv4_address: 192.168.1.40
      vlan-iot:
        ipv4_address: 192.168.40.40
    ports:
      - "8123:8123"
    volumes:
      - /mnt/user/appdata/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      #- /dev/ttyACM0:/dev/ttyACM0 # Zooz 800 Z-Wave
    environment:
      - TZ=${TZ}
      - INIT_USERNAME=${HA_USER}
      - INIT_PASSWORD=${HA_PASS}
      - HTTP_USE_X_FORWARDED_FOR=true
      - HTTP_TRUSTED_PROXIES=192.168.1.2
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.homeassistant.rule=Host(`ha.${DOMAIN}`)"
      - "traefik.http.routers.homeassistant.entrypoints=websecure"
      - "traefik.http.routers.homeassistant.tls=true"
      - "traefik.http.routers.homeassistant.tls.certresolver=dns-cloudflare"
      - "traefik.http.services.homeassistant.loadbalancer.server.port=8123"
      #- "traefik.http.routers.homeassistant.middlewares=ipwhitelist"
      - "traefik.http.services.homeassistant.loadbalancer.passHostHeader=true"
      - "traefik.http.services.homeassistant.loadbalancer.server.scheme=http"
    restart: unless-stopped

  frigate:
    image: ghcr.io/blakeblackshear/frigate:stable
    container_name: frigate
    privileged: true  # Required for GPU access
    restart: unless-stopped
    networks:
      vlan-cameras:
        ipv4_address: 192.168.70.70
    devices:
      - /dev/dri:/dev/dri  # Intel iGPU access
    volumes:
      - /mnt/user/appdata/frigate:/config          # Frigate config and DB
      - /mnt/user/cameras/frigate:/media/frigate   # Separate volume for recordings
      - /dev/shm:/dev/shm                          # RAM buffer
      - /etc/localtime:/etc/localtime:ro           # System time sync
      - type: tmpfs                                # Cache in RAM
        target: /tmp/cache
        tmpfs:
          size: 1000000000  # 1GB
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      # Authentication uncomment to require login
      #- FRIGATE_UI_USER=${FRIGATE_USER}
      #- FRIGATE_UI_PASSWORD=${FRIGATE_PASS}
      # Hardware Acceleration (Intel Arc Graphics)
      - FRIGATE_HWACCEL_ARGS=vaapi
      - FRIGATE_DETECTORS_CPU_TYPE=cpu        # Start with CPU, test GPU later
      # Performance Settings
      - FRIGATE_FFMPEG_GLOBAL_ARGS="-hwaccel vaapi -hwaccel_device /dev/dri/renderD128 -hwaccel_output_format vaapi"
      - FRIGATE_FFMPEG_OUTPUT_ARGS="-vf scale_vaapi=format=nv12"
      - FRIGATE_FFMPEG_HWACCEL_ARGS=vaapi
      # Storage Settings
      - FRIGATE_RECORD_ENABLED=False
      - FRIGATE_DETECT_ENABLED=False
      # Camera Configuration
      # |
      #   Example camera configuration (uncomment when ready):
      #   - FRIGATE_CAMERAS_CAM1_FFMPEG_INPUTS_0_PATH=rtsp://admin:password@192.168.70.10:554/stream1
      #   - FRIGATE_CAMERAS_CAM1_FFMPEG_INPUTS_0_ROLES_0=detect
      #   - FRIGATE_CAMERAS_CAM1_FFMPEG_INPUTS_0_ROLES_1=record
      #   - FRIGATE_CAMERAS_CAM1_FFMPEG_HWACCEL_ARGS=vaapi
      #   - FRIGATE_CAMERAS_CAM1_DETECT_ENABLED=true
      #   - FRIGATE_CAMERAS_CAM1_RECORD_ENABLED=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frigate.rule=Host(`cameras.${DOMAIN}`)"
      - "traefik.http.routers.frigate.entrypoints=websecure"
      - "traefik.http.routers.frigate.tls=true"
      - "traefik.http.routers.frigate.tls.certresolver=dns-cloudflare"
      - "traefik.http.services.frigate.loadbalancer.server.port=8123"
      #- "traefik.http.routers.frigate.middlewares=ipwhitelist"
      - "traefik.http.services.frigate.loadbalancer.passHostHeader=true"
      - "traefik.http.services.frigate.loadbalancer.server.scheme=http"